name: windows-awg

on: [push]

jobs:
  Build-Libs-AWG-Windows:
    name: 'Build-Libs-AWG-Windows'
    runs-on: windows-latest
    if: |
      contains(github.event.head_commit.message, '[all]') ||
      contains(github.event.head_commit.message, '[windows]') ||
      contains(github.event.head_commit.message, '[windows-awg]') ||
      contains(github.event.head_commit.message, '[awg]')

    steps:
    - name: 'Get AmneziaWG'
      uses: actions/checkout@v4
      with:
        repository: marko1777/amneziawg-windows
        ref: awg-1.5
        path: windows/wireguard-windows

    - name: 'Build WireGuard binary'
      working-directory: windows/wireguard-windows
      run: |
        cmd /c build.cmd
        mkdir build
        move x64 build\x64
        move x86 build\x86

    - name: 'Archive artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: awg-windows
        path: windows/wireguard-windows/build
        retention-days: 1

  github-release:
    name: GitHub Release
    needs: Build-Libs-AWG-Windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v4

    - name: Setup | Artifacts
      uses: actions/download-artifact@v4

    - name: Setup | Checksums
      run: for file in $(find ./ -name '*.dll' ); do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

    - name: Zip ALL
      run: for file in *; do zip -r ${file%.*}.zip  $file; done

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: awg-windows.zip
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
